name: CI Pipeline

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Installing dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-server
          sudo service mysql start
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Set up Docker Compose
        run: |
          docker compose version

      - name: Start MySQL Service
        env:
            MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
            MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        run: |
          docker compose up -d
          docker compose ps

      - name: Check MySQL environment variables
        run: |
          docker exec mysql-db env | grep MYSQL_ROOT_PASSWORD

      - name: Wait for MySQL to be ready
        run: |
          until docker exec mysql-db mysql -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }} -e 'SHOW DATABASES;' > /dev/null 2>&1; do
            echo "Waiting for MySQL to be ready..."
            docker logs mysql-db
            sleep 5
          done
          echo "MySQL is ready!"

      - name: Run SQL Query on NVDA_DATA
        run: |
          docker exec mysql-db mysql -h mysql -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }} -D ${{ secrets.MYSQL_DATABASE }} -e "SELECT * FROM NVDA_DATA WHERE id = '16';"

      - name: Run databaseTests file
        run: |
          python3 tests/databaseTests.py

      - name: Tear down Docker Compose
        run: |
          docker compose down
