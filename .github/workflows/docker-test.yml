name: CI Pipeline

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Installing mySQL
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-server
          sudo apt-get install jq
          sudo service mysql start
          
      - name: Set up Docker Compose
        run: |
          docker compose version

      - name: Start MySQL Service
        env:
            MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
            MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        run: |
          docker compose up -d
          docker compose ps

      - name: Wait for MySQL to be ready
        run: |
          until docker exec mysql-db mysql -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }} -e 'SHOW DATABASES;' > /dev/null 2>&1; do
            echo "Waiting for MySQL to be ready..."
            docker logs mysql-db
            sleep 5
          done
          echo "MySQL is ready!"

      - name: Run SQL Query on NVDA_DATA
        run: |
          docker exec mysql-db mysql -h mysql -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }} -D ${{ secrets.MYSQL_DATABASE }} -e "SELECT * FROM NVDA_DATA WHERE id = '16';"
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Installing dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # - name: Scrape News and dump json in output folder under ./output/news-<stock>-data.json
      #   run: |
      #     python3 scrapers/newsScraper.py

      - name: Run adding to DB file
        env:
            MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
            MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        run: |
          bash updateDatabase.sh

      - name: Run SQL Query on NEWS_NVDA_DATA
        run: |
          docker exec mysql-db mysql -h mysql -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }} -D ${{ secrets.MYSQL_DATABASE }} -e "SELECT * FROM NEWS_NVDA_DATA;"

      - name: Dump News DB data in ./db/news/news-<stock>-data.sql
        env:
            MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
            MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        run: |
            docker exec mysql-db mysqldump -h mysql -u root -p${{ secrets.MYSQL_ROOT_PASSWORD }} ${{ secrets.MYSQL_DATABASE }} NEWS_NVDA_DATA > /tmp/news_nvda_data.sql
            docker cp mysql-db:/tmp/news_nvda_data.sql ./db/news/news_nvda_data.sql

      - name: Tear down Docker Compose
        run: |
          docker compose down            

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Commit changes
        run: |
          git add .
          git commit -m "Updated database dump" || echo "No changes to commit"

      - name: Push changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin HEAD:main
